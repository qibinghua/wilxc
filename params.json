{"name":"WilXC","tagline":"A web based XenCenter type control panel and console in alpha for XenServer 6","body":"What is done:\r\n+ Can query the xenserver for all running VMs\r\n+ Display all VMs and allow stopping, starting, pause, snapshot, reboot, force reboot and shutdown.\r\n+ Can display properties of VM.\r\n+ Framework in place for authentiaction via msyql\r\n\r\nWhat needs work:\r\n+ Improve query times\r\n+ Create VMs from template\r\n+ Authentication for users\r\n+ Pull configs to update tool bar\r\n\r\n![Alt text](/README.png?raw=true \"Main WilXC Screen\")\r\n\r\n#Install steps\r\n\r\n##Setting Up Laravel\r\n```\r\nmkdir gitrepo\r\n```\r\n```\r\nyum install php php-mcrypt php-pdo httpd mysql mysql-server php-mysqlnd php-xmlrpc\r\n```\r\n```\r\nservice mysqld start; chkconfig mysqld on\r\n```\r\n```\r\ncd /usr/local/bin; curl -sS https://getcomposer.org/installer | php; mv composer.phar composer; \r\n```\r\n```\r\ncd ~/gitrepo\r\n```\r\n```\r\ncomposer create-project laravel/laravel --prefer-dist\r\n```\r\n\r\n##Staging scripts\r\nProduction:\r\n+ deploy.sh:\r\n```\r\n#!/bin/bash\r\nrm -Rf p4\r\ngit clone git@github.com:wbirkmaier/p4.git\r\ncd p4\r\ncomposer install --prefer-dist\r\nchmod -R 777 app/storage\r\ncd ..\r\n```\r\n+ stage.sh\r\n```\r\n#!/bin/bash\r\nrm -Rf laravel\r\ncp -R /home/wbirkmaier/gitrepo/test/laravel/ .\r\ncd laravel\r\nchmod -R 777 app/storage\r\n```\r\n\r\n##Sync to apache dir\r\n+ cp ``` <project> ``` in /var/www/html \r\n+ replace DocumentRoot \"/var/www/html\" in vi /etc/httpd/conf/httpd.conf in ```<project>```/public\r\n```\r\n<Directory \"/var/www/html\">\r\n    AllowOverride All\r\n```\r\n+ make sure you\r\n```\r\nchmod -R 777 app/storage\r\n```\r\n+ allow httpd with selinux\r\n```\r\nsetsebool -P httpd_unified 1\r\n```\r\n\r\n##Debug environments\r\n```\r\n/app/config/local/app.php We set debug to true\r\n/app/config/production/app.php We set debug to false\r\n/app/config/app.php We set debug to false\r\n```\r\n\r\n##Determine Environment\r\nvi /bootstrap/start.php\r\n\r\n+ For all environments to get devel environment\r\n```\r\n$env = $app->detectEnvironment(array(\r\n\r\n    'local' => array('*'),\r\n\r\n));\r\n```\r\n+ Otherwise do this for each environment:\r\n\r\n```\r\n$env = $app->detectEnvironment(array(\r\n\r\n    'local' => array('Jane-Doe-MacBook-Air.local'),\r\n    'production' => array('ex-std-node292.prod.rhcloud.com'),\r\n\r\n));\r\n```\r\n\r\n##Database Setup\r\n```mysql -u root```\r\n\r\n```create database wilxc;```\r\n\r\nexit the database.\r\n\r\n```\r\n/usr/bin/mysql_secure_installation and say yes to all, set password\r\n\r\nThen edit the files below:\r\nvi /app/config/database.php\r\nvi /app/config/local/database.php\r\n```\r\n\r\n```\r\n 'mysql' => array(\r\n                        'driver'    => 'mysql',\r\n                        'host'      => 'localhost',\r\n                        'database'  => 'laravel',\r\n                        'username'  => 'root',\r\n                        'password'  => '',\r\n```\r\n\r\n##Test Database\r\nvi app/routes.php\r\n```\r\nRoute::get('test', function()\r\n{\r\n    echo 'Environment: '.App::environment().'<br>';\r\n    $results = DB::select('SHOW DATABASES;');\r\n    echo print_r($results);\r\n    phpinfo();\r\n}); \r\n```\r\n##Migration (Schemas)\r\n\r\n```\r\nphp artisan migrate:make create_test_table\r\n```\r\n+ Run the migration\r\n```\r\nphp artisan migrate\r\n```\r\n\r\n##Set up Andy Goodwin Code for laravel\r\nIn app/models add XenApi.php, case matters\r\n```\r\n<?php\r\n/*\r\n *    PHP XenAPI v1.0\r\n *    a class for XenServer API calls\r\n *\r\n *    Copyright (C) 2010 Andy Goodwin <andyg@unf.net>\r\n *\r\n *    This class requires xml-rpc, PHP5, and curl.\r\n *\r\n *    Permission is hereby granted, free of charge, to any person obtaining \r\n *    a copy of this software and associated documentation files (the \r\n *    \"Software\"), to deal in the Software without restriction, including \r\n *    without limitation the rights to use, copy, modify, merge, publish, \r\n *    distribute, sublicense, and/or sell copies of the Software, and to \r\n *    permit persons to whom the Software is furnished to do so, subject to \r\n *    the following conditions:\r\n *\r\n *    The above copyright notice and this permission notice shall be included \r\n *    in all copies or substantial portions of the Software.\r\n *\r\n *    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS \r\n *    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF \r\n *    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. \r\n *    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY \r\n *    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, \r\n *    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE \r\n *    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\nclass XenApi extends Eloquent \r\n{\r\n\r\n```\r\n\r\n?> can be removed from the end as well\r\n\r\nFrom main code remove\r\n```\r\n<?\r\ninclude('xenapi.php');\r\n```\r\n\r\n#User Authentication\r\napp/config/session.php\r\n\r\n```\r\n'driver' => 'database',\r\n```\r\n\r\n```\r\nphp artisan session:table\r\n```\r\n\r\n```\r\nphp artisan migrate\r\n```\r\n\r\n```\r\nphp artisan migrate:make create_user_table\r\n```\r\n\r\n```\r\npublic function up()\r\n\t{\r\n         Schema::create('users', function($table)\r\n            {\r\n                $table->increments('id');\r\n                $table->string('username', 128)->unique();\r\n                $table->string('password', 60);\r\n                $table->string('email', 254)->unique();\r\n                $table->rememberToken();\r\n                $table->timestamps();\r\n            });\r\n\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Reverse the migrations.\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tpublic function down()\r\n\t{\r\n\t\tSchema::drop('users');\r\n\t}\r\n```\r\n\r\n```\r\nphp artisan migrate\r\n```\r\n\r\n#Connect to your XenServer\r\nvi app/models/Credentials.php\r\n```\r\nclass Credentials extends Eloquent\r\n    {   \r\n\tprivate static function url()\r\n\t\t{\r\n\t\t\t$staticURL = \"https://192.168.0.2\";\r\n\t\t\treturn $staticURL;\r\n\t\t}\r\n\tprivate static function login()\r\n        {\r\n\t\t\t$staticLogin = \"root\";\r\n\t\t\treturn $staticLogin;\r\n        }\r\n\tprivate static function password()\r\n        {\r\n            $staticPassword = \"\";\r\n\t\t\treturn $staticPassword;\r\n        }\r\n\r\n```\r\n\r\nvim bootstrap/start.php to change your environment from dev to prod, etc, change to relevant hostname\r\n\r\n\r\n#Credits & External notes\r\n+ PHP XenApi code from <https://github.com/andygoodwin/PHP-xenapi>\r\n+ XenServer Managment API <http://docs.vmd.citrix.com/XenServer/6.2.0/1.0/en_gb/api/>\r\n+ Bootstrap <http://getbootstrap.com/>\r\n+ Font Awesome <https://fortawesome.github.io/Font-Awesome/>\r\n\r\n##Tips and Trick\r\n+ php --ini\r\n+ phpinfo();\r\n+ php code.php\r\n\r\n```All Classes in XenAPI can have the follow operations done, example Credentials::loginXen()->VM_get_by_uuid($uuid);\"\r\n   \"get_by_name_label\"\r\n   \"get_by_uuid\"\r\n   \"get_record\"\r\n   \"get_all\"\r\n      \r\n   Also you can do VM_get{fields}, VM_get_is_a_template, or VM_get_bios_strings\r\n   set_X: change the value of field X (only if it is read-write);\r\n   get_X: retrieve the value of field X;\r\n   add_to_X: add a key/value pair (only if field has type set or map); and\r\n   remove_from_X: remove a key (only if a field has type set or map).\r\n   http://docs.vmd.citrix.com/XenServer/6.2.0/1.0/en_gb/api/\r\n   \r\n   Enums are operations you can do directly against an OpaqueRef\r\n   Credentials::loginXen()->VM_clean_shutdown($vmRef);\r\n```\r\n#Example of drilling through the arrays\r\n\r\n```\r\n<?php $poolGetAll = $xenserver->pool_get_all(); ?>\r\n<?php echo '<pre>'; print_r($poolGetAll); echo '</pre>'; ?>\r\n<?php $poolObjRef = $poolGetAll[\"0\"]; ?>\r\n<?php echo '<pre>'; print_r($poolObjRef); echo '</pre>'; ?>        \r\n<?php $poolNameLabel = $xenserver->pool_get_record($poolObjRef); ?>\r\n<?php echo '<pre>'; print_r($poolNameLabel); echo '</pre>'; ?>\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}